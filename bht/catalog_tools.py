import csv
import datetime

from bht_config import yml_settings


def rows_to_catstring(events_list, catalog_name):
    """Build a text file of events in amda catalog format
    Event dict has keys ['doi','instrument','mission','region','start_date','stop_date']

    :parameter: list of events as dicts
    :return: string to write to txt file
    """
    date_now = datetime.datetime.now().strftime("%Y/%m/%d %H:%M:%S")
    r_string = f"""
# Name: {catalog_name};
# BibHelioTechVersion: V{yml_settings["BHT_PIPELINE_VERSION"]};
# Creation Date: {date_now};
# Description: Catalogue of events resulting from the HelioNER code
# (Dablanc & GÃ©not, "https://github.com/ADablanc/BibHelioTech.git")
#
# Dynamically generated by the BibHelioTech web service.
#
# The two first columns are the start/stop times of the event.
# The third column is the DOI of the paper,
# The fourth column is the mission that observed the event with the list of instruments listed in the fifth column.
# The sixth column is the most probable region of space where the observation took place (SPASE ObservedRegions term);
#
# Parameter 1: id:column1; name:DOI; size:1; type:char;
# Parameter 2: id:column2; name:SATS; size:1; type:char;
# Parameter 3: id:column3; name:INSTS; size:1; type:char;
# Parameter 4: id:column4; name:REGS; size:1; type:char;
"""
    for e in events_list:
        r_string += f"{e['start_date']} {e['stop_date']} {e['doi']} {e['mission']} {e['instrument']} {e['region']}\n"
    return r_string


def catfile_to_rows(catfile):
    """Get all rows of a catalog file as  dict

      TODO: MODEL should move to Paper or Catalog method

       -  read each line, rid of comments
       -  create a hp_event_dict
    :return: hpevent_dict list
    """
    hpeventdict_list = []
    with open(catfile, newline="") as csvfile:
        reader = csv.reader(
            filter(lambda r: r[0] != "#", csvfile), delimiter=" ", quotechar='"'
        )
        for row in reader:
            hpevent_dict = {
                "start_date": row[0],
                "stop_date": row[1],
                "doi": row[2],
                "mission": row[3],
                "instrument": row[4],
                "region": row[5],
            }

            hpeventdict_list.append(hpevent_dict)
    return hpeventdict_list
